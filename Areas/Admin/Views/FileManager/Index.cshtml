@{
    ViewBag.Title = "File Manager";
    //Layout = "";
}
<style>
    .dialogelfinder {
    z-index: 20000;
}
</style>
<input type="text" id="fileurl" /><button id="fileUpload" >Chọn</button>
<div id="elfinder"></div>
@*

<link rel="stylesheet" href="~/lib/jqueryui/themes/base/theme.css" />
<link rel="stylesheet" href="~/lib/jqueryui/themes/base/jquery-ui.css" />
<link rel="stylesheet" href="~/lib/elfinder/css/elfinder.full.css" />
<link rel="stylesheet" href="~/lib/elfinder/css/theme.min.css" />

<script src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/jqueryui/jquery-ui.min.js"></script>
<script src="~/lib/elfinder/js/elfinder.min.js"></script>*@

<script type="text/javascript">
    // Documentation for client options:
    // https://github.com/Studio-42/elFinder/wiki/Client-configuration-options

    $(document).ready(function () {
        $("#fileurl1").click(function(e) {
        var myCommands = elFinder.prototype._options.commands;

        // Not yet implemented commands in elFinder.NetCore
        var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping', 'search', 'zipdl', 'help'];
        elFinder.prototype.i18.en.messages.TextArea = "Edit";

        $.each(disabled, function (i, cmd) {
            (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
        });

        var options = {
            baseUrl: "/lib/elfinder/",
            url: "/file-system/connector",
            rememberLastDir: false,
            commands: myCommands,
            lang: 'vi',
            uiOptions: {
                toolbar: [
                    ['back', 'forward'],
                    ['reload'],
                    ['home', 'up'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download'],
                    ['undo', 'redo'],
                    ['info'],
                    ['quicklook'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'edit'],
                    ['selectall', 'selectnone', 'selectinvert'],
                    ['view', 'sort']
                ]
            },
            //onlyMimes: ["image", "text/plain"] // Get files of requested mime types only
            lang: 'vi',
            //handlers : {
            //  dblclick : function(event, elfinderInstance) {
            //      event.preventDefault();
            //      //elfinderInstance.exec('download');

            //      elfinderInstance.exec('getfile')
            //                      .done(function() { elfinderInstance.exec('quicklook'); })
            //                      .fail(function() { elfinderInstance.exec('open'); });
            //    }
            //  },

          getFileCallback : function(files, fm) {
          console.log(files);
          $("#fileurl").val(files.path);
          },
        };
        $('#elfinder').elfinder(options).elfinder('instance')
    });

    $("#fileUpload").click(function(e) {
        $('#editor').remove();

        var myCommands = elFinder.prototype._options.commands;

        // Not yet implemented commands in elFinder.NetCore
        var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping', 'search', 'zipdl', 'help'];
        elFinder.prototype.i18.en.messages.TextArea = "Edit";

        $.each(disabled, function (i, cmd) {
            (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
        });

        var options = {
            baseUrl: "/lib/elfinder/",
            url: "/file-system/connector",
            rememberLastDir: false,
            commands: myCommands,
            lang: 'vi',
            uiOptions: {
                toolbar: [
                    ['back', 'forward'],
                    ['reload'],
                    ['home', 'up'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download'],
                    ['undo', 'redo'],
                    ['info'],
                    ['quicklook'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'edit'],
                    ['selectall', 'selectnone', 'selectinvert'],
                    ['view', 'sort']
                ]
            },
            lang: 'vi',
            getFileCallback : function(files, fm) {
                $("#fileurl").val(files.path);
                $('#editor').remove(); 
            },
            width: 1024,
            destroyOnClose : true
        };

        $('<div id="editor" />').dialogelfinder(options).elfinder('instance')
    });

    InitDialogElFinder('#excerptImage', '#btnExcerptImage');
    });

</script>